package board.controller;

import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import board.dto.Board;
import board.service.BoardService;

@Controller
public class BoardController {
	
	@Autowired
	BoardService service;
	
	@GetMapping(path="/board_main")
	public String board_main(@RequestParam(name="start", defaultValue="0", required=false)int start, ModelMap map) {
		List<Board> boards = service.getBoards(start);
		int count = service.BoardCount();
		int pagecount = count / BoardService.LIMIT;
		
		if(count % BoardService.LIMIT != 0)
			pagecount++;
		
		List<Integer> pageStartList = new ArrayList<Integer>();
		for(int i=0; i<pagecount; i++) {
			pageStartList.add(i * BoardService.LIMIT);
		}
		
		map.addAttribute("boards", boards);
		map.addAttribute("pageStartList", pageStartList);
		
		return "login_filter/board_main.jsp";
	}
	
	@PostMapping(path="/board_write")
	public String board_write(@RequestParam(name="title", required=true) String title, @RequestParam(name="contents", required=true) String contents,
								HttpSession session, ModelMap map) {
		String id = (String)session.getAttribute("IsLogin");
		Calendar cal = Calendar.getInstance();
		Date regdate = cal.getTime();
		
		Board board = new Board(id, title, contents, regdate);
		
		service.addBoard(board);
		session.setAttribute("boardwrite", "boardwrite");
		
		return "redirect:board_main";
	}
	
	@GetMapping(path="/board_detail")
	public String board_detail(@RequestParam(name="num", required=true) int num, HttpSession session) throws ParseException {
		Board board = service.getBoard(num);
		session.setAttribute("board", board);
		
		return "redirect:login_filter/board_detail.jsp";
	}
	
	@PostMapping(path="/board_update")
	public String board_update(@RequestParam(name="num", required=true) int num, @RequestParam(name="title", required=true) String title,
								@RequestParam(name="contents", required=true) String contents) {
		service.changeBoard(num, title, contents);
		
		return "redirect:board_main";
	}
	
	@PostMapping(path="/board_delete")
	public String board_delete(@RequestParam(name="num", required=true) int num) {
		
	}
}
